var searchIndex = {};
searchIndex["project_euler"] = {"doc":"","items":[[5,"read_hacker_rank","project_euler","Code used for reading in generic input for Hacker Rank Problem Euler challenges.",null,{"inputs":[],"output":{"name":"vec"}}],[5,"read_grid","","",null,{"inputs":[{"name":"usize"}],"output":{"name":"vec"}}],[0,"solutions","","A collection of functions for solving Project Euler questions.\nBased upon the parameters for the Hacker Rank implementations\nCurrently missing: #4, #7, #13",null,null],[3,"FibThree","project_euler::solutions","Holds and implements even Fibonacci numbers",null,null],[3,"PrimeCache","","Store and generate a vector of primes.",null,null],[12,"primes","","",0,null],[12,"bookmark","","",0,null],[3,"DivisorCache","","Stores the number of factors a number has in a HashMap.",null,null],[3,"CollatzCache","","",null,null],[5,"sum_multiples","","Sums up all the multiples of two integers [a,b] up to a certain integer n.",null,null],[5,"count_even","","Sums the even Fibonacci numbers up to an integer, n.",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[5,"largest_prime_factor","","Solves for the larget prime factor of an integer, n.",null,{"inputs":[{"name":"i64"}],"output":{"name":"i64"}}],[5,"compute_multiple","","Computes the smallest multiple of all the integers from 1 to n, n \\in Integers.",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[5,"squared_sum_diff","","Finds the absolute difference between the sum of squares, 1^2 + 2^2 + ... + n^2, and the square of the sum, (1 + 2 + ... + n)^2.",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[5,"largest_product","","Find the largest product of k sequential numbers in a sequence of n digits.",null,{"inputs":[{"name":"string"},{"name":"vec"}],"output":{"name":"i64"}}],[5,"pythagorean_triplets","","Given N, finds the maximum product, a*b*c, of pythagorean triples {(a,b,c)| a^2 + b^2 = c^2 } such that a+b+c = N.",null,{"inputs":[{"name":"i32"}],"output":{"name":"i64"}}],[5,"sum_primes","","Sums up primes up to an integer n.",null,{"inputs":[{"name":"i64"},{"name":"primecache"}],"output":{"name":"i64"}}],[5,"grid_prod","","Move across a grid and computes products of k sequential numbers in each direction.",null,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"i64"}}],[5,"triangle_divisors","","Finds the smallest triangular number, T_n, such that the number of factors of T_n is greater than a specified integer N.",null,{"inputs":[{"name":"i64"},{"name":"divisorcache"}],"output":{"name":"i64"}}],[5,"longest_collatz","","",null,{"inputs":[{"name":"i64"},{"name":"collatzcache"}],"output":{"name":"i64"}}],[11,"new","","",1,{"inputs":[],"output":{"name":"fibthree"}}],[11,"next","","",1,null],[11,"new","","",0,{"inputs":[],"output":{"name":"primecache"}}],[11,"fill","","Add new primes to the structure up to an integer n.",0,null],[11,"new","","",2,{"inputs":[],"output":{"name":"divisorcache"}}],[11,"get","","Fetches the number of factors an integer has. It is calculated and stored if not currently stored.",2,null],[11,"new","","",3,{"inputs":[],"output":{"name":"collatzcache"}}]],"paths":[[3,"PrimeCache"],[3,"FibThree"],[3,"DivisorCache"],[3,"CollatzCache"]]};
searchIndex["prototype"] = {"doc":"","items":[],"paths":[]};
initSearch(searchIndex);
